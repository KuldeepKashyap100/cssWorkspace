* {
    box-sizing: border-box; /*The box-sizing CSS property sets how the total width and height of an element is calculated. By default in the CSS box model, the width and height you assign to an element is applied only to the element's content box. If the element has any border or padding, this is then added to the width and height to arrive at the size of the box that's rendered on the screen. This means that when you set width and height, you have to adjust the value you give to allow for any border or padding that may be added. For example, if you have four boxes with width: 25%;, if any has left or right padding or a left or right border, they will not by default fit on one line within the constraints of the parent container.*/
}

body{
    font-family: 'Montserrat', sans-serif;
    margin: 0;
}
#product-overview {
    background: linear-gradient(to top, rgba(80, 68, 18, 0.6) 10%, transparent), url("images/freedom.jpg") center/cover no-repeat border-box, #ff1b68;
    /* background: url("images/freedom.jpg"); */
    /* background-size: cover; */
    /* background-repeat: no-repeat; */

    /*background-position: 10px 50px;*/  /*first value if for left and right and second is for top and bottom */
    /*background-position: 0% 100%; */  /*second value will crop the image from top if image does not fit. if 50% then 50% from top and 50% from bottom will be croped(i.e center).*/
    /*background-position: center;*/ /*image will be cropped 50% from top bottom left right.(i.e. center of the image is the center of the container)*/
    /* background-position: left top; */ /* left and top edge of the image aligned with left and top edge of the container*/
    /* background-position: left 10% bottom 20%; */

    /*background-origin: border-box; The background-origin lets you decide where you want the background-position starting point to be set: on the border, padding or content.*/
    /* background-clip: border-box; */
    /* border: 10px dashed red; */

    /* background-image: linear-gradient(red,blue); */
    /* background-image: linear-gradient(to left bottom, red,blue); */
    /*background-image: linear-gradient(180deg, red,blue,green,yellow);*/   /*default angle*/
    /* background-image: linear-gradient(180deg, red,blue, transparent); */
    /* background-image: linear-gradient(180deg, red 70%,blue, rgba(0,0,0,0.5)); */

    /* background-image: radial-gradient(red, green, blue); */
    /* background-image: radial-gradient(circle,red, green, blue); */
    /* background-image: radial-gradient(circle at top,red, green, blue); */
    /* background-image: radial-gradient(circle at top left, red, green, blue); */
    /* background-image: radial-gradient(circle at 10% 50%, red,green, blue); */
    /* background-image: radial-gradient(circle 50px at 10% 50%, red,green, blue); */
    /* background-image: radial-gradient(ellipse 50px 30px at 10% 50%, red,green, blue); */
    
    /* padding: 10px; */
    
    /* border-style: solid;
    border-color: black;
    border-width: 5px;
    margin: 10px; */

    width: 100vw;
    height: 33vh;
    /* margin-top: 2.5rem; */
	position: relative

}
#product-overview h1 {
    color: white;
    font-family: 'Anton', cursive;
	position: absolute;
	bottom: 0;
	left: 0;
	margin: 0;
    padding: 0.7rem;
    font-size: 1.6rem;
}

/* media query for mobile it works like if statement */
/* order matters 60rem must be after 40rem. because if 40rem declared after 60rem then 40rem condition will always be true */
/* logical condition can be added for and by using 'and' and for 'or' by using ',' */
/* we can also add orientation query i.e orientation:portrait */
@media (min-width: 40rem) and (min-height: 40rem) {
    #product-overview {
        height: 40vh;
        background-position: 50% 25%;
    }
    #product-overview h1 {
        font-size: 2rem;
    }
}

/* @media (min-width: 60rem) and (min-height: 60rem) {
    #product-overview {
        height: 50vh;
        background-position: 50% 25%;
    }
    #product-overview h1 {
        font-size: 5rem;
    }
} */
/* media query for mobile it works like if statement */


.section-title {
    color: green;
    font-family: inherit;
    text-align: center;
}

.plan {
    background-color: #d5ffdc;
    text-align: center;
    padding: 1rem;
    margin: 0.5rem 0;
    /* display: inline-block; */
    width: 100%;
    /* vertical-align: middle; */
}

/* .plan__list {
    width: 100%;
    text-align: center;
} */

.plan--highlighted {
    background: #19b84c;
    color: white;
    /* box-shadow: 2px 2px 2px 2px rgba(0,0,0,0.5); */
}

.plan__annotation {
    background: white;
    color: #19b84c;
    box-shadow: 2px 2px 2px 2px rgba(0,0,0,0.5);
    padding: 0.5rem;
    border-radius: 0.5rem;
    cursor: pointer;
}

.plan__features {
    list-style: none;
    margin: 0;
    padding: 0;
}

.plan__features li {
    margin: 0.5rem 0;
}

.plan__title {
    color: darkgreen;
    margin: 0.5rem 0;
}

.plan__price {
    color: #858585;
    margin: 0.5rem 0;
}

.plan--highlighted .plan__price {
    color: white;
}

.plan--highlighted .plan__title {
    color: white
}

/* media query for plans */
@media(min-width:40rem) {
    .plan__list {
        /* width: 100%; */
        /* text-align: center; */
        display: flex;
        justify-content: center;
        align-items: center;
    }
    .plan {
        /* display: inline-block; */
        /* vertical-align: middle; */
        width: 30%;
        min-width: 13rem;
        max-width: 25rem;
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        height: 28rem;
    }
    .plan--highlighted {
        box-shadow: 2px 2px 2px 2px rgba(0,0,0,0.5);
        height: 30rem;
        z-index: 1;
    }
}

#key-features {
    background: #ff1b68;
    padding: 0.6rem;
    margin-top: 5rem;
    padding: 1rem;
}

#key-features .section-title{
    color: white;
    margin: 2rem;
}

.key-features__list {
    list-style: none;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
}

.key-feature {
    /* display: inline-block; */
    /* width: 30%; */
    margin: 0 0.6rem;
    /* vertical-align: top; */
}

.key-feature__image {
    background: #ffcede;
    width: 128px;
    height: 128px;
    border:2px;
    border: 2px solid #424242;
    border-radius: 50%;
    margin: auto;
}

.key-feature__description {
    text-align: center;
    font-weight: bold;
    color: white;
    font-size: 1.2rem;
}

/* media query for key features */
@media (min-width: 40rem) {
    .key-features__list {
        flex-direction: row;
    }

    .key-feature {
        /* display: inline-block; */
        width: 30%;
        /* vertical-align: top; */
        max-width: 25rem;
        display: flex;
        flex-direction: column;
        justify-content: center;
    }
}
/* media query for key features */



/* modal styling */
.modal {
    position: fixed;
    /* display: none; */
    z-index: 200;
    top: 20%;
    left: 30%;
    width: 40%;
    background: white;
    padding: 1rem;
    border: 1px solid #ccc;
    box-shadow: 1px 1px 1px rgba(0, 0, 0, 0.5);
    /*animation*/
    opacity: 0;
    transform: translateY(-3rem);
    /*what properties we want to animate. we can specify ease-in means starts slower and ends faster.*/
    transition: opacity 200ms ease-out, transform 500ms ease-out;
}

.modal__title {
    text-align: center;
    margin: 0 0 1rem 0;
}

.modal__actions {
    text-align: center;
}

.modal__action {
    border: 1px solid #0e4f1f;
    background: #0e4f1f;
    color: white;
    font: inherit;
    padding: 0.5rem 1rem;
    cursor: pointer;
}
.modal__action:hover,
.modal__action:active {
    background: #2ddf5c;
    border-color: #2ddf5c;
}

.modal__action--negative {
    background: red;
    border-color: red;
}

.modal__action--negative:hover,
.modal__action--negative:active {
    background: #ff5454;
    border-color: #ff5454;
}